var pages = [{"name":"object Parse","description":"me.lekov.parsekt.Parse","location":"parse/me.lekov.parsekt/-parse/index.html","searchKeys":["Parse","object Parse"]},{"name":"fun initialize(context: Context, applicationId: String, clientKey: String? = null, masterKey: String? = null, serverUrl: String)","description":"me.lekov.parsekt.Parse.initialize","location":"parse/me.lekov.parsekt/-parse/initialize.html","searchKeys":["initialize","fun initialize(context: Context, applicationId: String, clientKey: String? = null, masterKey: String? = null, serverUrl: String)"]},{"name":"lateinit var serverUrl: String","description":"me.lekov.parsekt.Parse.serverUrl","location":"parse/me.lekov.parsekt/-parse/server-url.html","searchKeys":["serverUrl","lateinit var serverUrl: String"]},{"name":"class ParseRelationDelegate<T : ParseObject<T>>","description":"me.lekov.parsekt.ParseRelationDelegate","location":"parse/me.lekov.parsekt/-parse-relation-delegate/index.html","searchKeys":["ParseRelationDelegate","class ParseRelationDelegate<T : ParseObject<T>>"]},{"name":"fun ParseRelationDelegate()","description":"me.lekov.parsekt.ParseRelationDelegate.ParseRelationDelegate","location":"parse/me.lekov.parsekt/-parse-relation-delegate/-parse-relation-delegate.html","searchKeys":["ParseRelationDelegate","fun ParseRelationDelegate()"]},{"name":"operator fun getValue(parseObject: T, property: KProperty<*>): ParseRelation","description":"me.lekov.parsekt.ParseRelationDelegate.getValue","location":"parse/me.lekov.parsekt/-parse-relation-delegate/get-value.html","searchKeys":["getValue","operator fun getValue(parseObject: T, property: KProperty<*>): ParseRelation"]},{"name":"object ACLSerializer : KSerializer<ACL> ","description":"me.lekov.parsekt.api.ACLSerializer","location":"parse/me.lekov.parsekt.api/-a-c-l-serializer/index.html","searchKeys":["ACLSerializer","object ACLSerializer : KSerializer<ACL> "]},{"name":"open override val descriptor: SerialDescriptor","description":"me.lekov.parsekt.api.ACLSerializer.descriptor","location":"parse/me.lekov.parsekt.api/-a-c-l-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"me.lekov.parsekt.api.LocalDateTimeQuerySerializer.descriptor","location":"parse/me.lekov.parsekt.api/-local-date-time-query-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"me.lekov.parsekt.api.LocalDateTimeSerializer.descriptor","location":"parse/me.lekov.parsekt.api/-local-date-time-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"me.lekov.parsekt.api.ParsePointerSerializer.descriptor","location":"parse/me.lekov.parsekt.api/-parse-pointer-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"me.lekov.parsekt.api.QueryConstraintsSerializer.descriptor","location":"parse/me.lekov.parsekt.api/-query-constraints-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor"]},{"name":"open override fun deserialize(decoder: Decoder): ACL","description":"me.lekov.parsekt.api.ACLSerializer.deserialize","location":"parse/me.lekov.parsekt.api/-a-c-l-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ACL"]},{"name":"open override fun deserialize(decoder: Decoder): LocalDateTime","description":"me.lekov.parsekt.api.LocalDateTimeQuerySerializer.deserialize","location":"parse/me.lekov.parsekt.api/-local-date-time-query-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): LocalDateTime"]},{"name":"open override fun deserialize(decoder: Decoder): LocalDateTime","description":"me.lekov.parsekt.api.LocalDateTimeSerializer.deserialize","location":"parse/me.lekov.parsekt.api/-local-date-time-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): LocalDateTime"]},{"name":"open override fun deserialize(decoder: Decoder): ParsePointer","description":"me.lekov.parsekt.api.ParsePointerSerializer.deserialize","location":"parse/me.lekov.parsekt.api/-parse-pointer-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ParsePointer"]},{"name":"open override fun deserialize(decoder: Decoder): MutableList<QueryConstraint>","description":"me.lekov.parsekt.api.QueryConstraintsSerializer.deserialize","location":"parse/me.lekov.parsekt.api/-query-constraints-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): MutableList<QueryConstraint>"]},{"name":"open override fun serialize(encoder: Encoder, value: ACL)","description":"me.lekov.parsekt.api.ACLSerializer.serialize","location":"parse/me.lekov.parsekt.api/-a-c-l-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ACL)"]},{"name":"open override fun serialize(encoder: Encoder, value: LocalDateTime)","description":"me.lekov.parsekt.api.LocalDateTimeQuerySerializer.serialize","location":"parse/me.lekov.parsekt.api/-local-date-time-query-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: LocalDateTime)"]},{"name":"open override fun serialize(encoder: Encoder, value: LocalDateTime)","description":"me.lekov.parsekt.api.LocalDateTimeSerializer.serialize","location":"parse/me.lekov.parsekt.api/-local-date-time-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: LocalDateTime)"]},{"name":"open override fun serialize(encoder: Encoder, value: ParsePointer)","description":"me.lekov.parsekt.api.ParsePointerSerializer.serialize","location":"parse/me.lekov.parsekt.api/-parse-pointer-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ParsePointer)"]},{"name":"open override fun serialize(encoder: Encoder, value: MutableList<QueryConstraint>)","description":"me.lekov.parsekt.api.QueryConstraintsSerializer.serialize","location":"parse/me.lekov.parsekt.api/-query-constraints-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: MutableList<QueryConstraint>)"]},{"name":"data class FindResponse<T : ParseObject<T>>(results: List<T>?, count: Int?)","description":"me.lekov.parsekt.api.FindResponse","location":"parse/me.lekov.parsekt.api/-find-response/index.html","searchKeys":["FindResponse","data class FindResponse<T : ParseObject<T>>(results: List<T>?, count: Int?)"]},{"name":"fun <T : ParseObject<T>> FindResponse(results: List<T>? = null, count: Int? = null)","description":"me.lekov.parsekt.api.FindResponse.FindResponse","location":"parse/me.lekov.parsekt.api/-find-response/-find-response.html","searchKeys":["FindResponse","fun <T : ParseObject<T>> FindResponse(results: List<T>? = null, count: Int? = null)"]},{"name":"operator fun component1(): List<T>?","description":"me.lekov.parsekt.api.FindResponse.component1","location":"parse/me.lekov.parsekt.api/-find-response/component1.html","searchKeys":["component1","operator fun component1(): List<T>?"]},{"name":"operator fun component1(): String","description":"me.lekov.parsekt.api.LiveQueryResponse.component1","location":"parse/me.lekov.parsekt.api/-live-query-response/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component1(): String","description":"me.lekov.parsekt.api.LoginSignUpResponse.component1","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component1(): HttpMethod","description":"me.lekov.parsekt.api.ParseApi.Command.component1","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component1.html","searchKeys":["component1","operator fun component1(): HttpMethod"]},{"name":"operator fun component1(): Int","description":"me.lekov.parsekt.types.ParseError.component1","location":"parse/me.lekov.parsekt.types/-parse-error/component1.html","searchKeys":["component1","operator fun component1(): Int"]},{"name":"operator fun component1(): T?","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.component1","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/component1.html","searchKeys":["component1","operator fun component1(): T?"]},{"name":"operator fun component1(): String","description":"me.lekov.parsekt.types.QueryConstraint.component1","location":"parse/me.lekov.parsekt.types/-query-constraint/component1.html","searchKeys":["component1","operator fun component1(): String"]},{"name":"operator fun component2(): Int?","description":"me.lekov.parsekt.api.FindResponse.component2","location":"parse/me.lekov.parsekt.api/-find-response/component2.html","searchKeys":["component2","operator fun component2(): Int?"]},{"name":"operator fun component2(): Int","description":"me.lekov.parsekt.api.LiveQueryResponse.component2","location":"parse/me.lekov.parsekt.api/-live-query-response/component2.html","searchKeys":["component2","operator fun component2(): Int"]},{"name":"operator fun component2(): String","description":"me.lekov.parsekt.api.LoginSignUpResponse.component2","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/component2.html","searchKeys":["component2","operator fun component2(): String"]},{"name":"operator fun component2(): ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Command.component2","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component2.html","searchKeys":["component2","operator fun component2(): ParseApi.Endpoint"]},{"name":"operator fun component2(): String?","description":"me.lekov.parsekt.types.ParseError.component2","location":"parse/me.lekov.parsekt.types/-parse-error/component2.html","searchKeys":["component2","operator fun component2(): String?"]},{"name":"operator fun component2(): Double","description":"me.lekov.parsekt.types.ParseGeoPoint.component2","location":"parse/me.lekov.parsekt.types/-parse-geo-point/component2.html","searchKeys":["component2","operator fun component2(): Double"]},{"name":"operator fun component2(): String?","description":"me.lekov.parsekt.types.ParseRelation.component2","location":"parse/me.lekov.parsekt.types/-parse-relation/component2.html","searchKeys":["component2","operator fun component2(): String?"]},{"name":"operator fun component2(): String?","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.component2","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/component2.html","searchKeys":["component2","operator fun component2(): String?"]},{"name":"operator fun component2(): JsonElement","description":"me.lekov.parsekt.types.QueryConstraint.component2","location":"parse/me.lekov.parsekt.types/-query-constraint/component2.html","searchKeys":["component2","operator fun component2(): JsonElement"]},{"name":"fun copy(results: List<T>? = null, count: Int? = null): FindResponse<T>","description":"me.lekov.parsekt.api.FindResponse.copy","location":"parse/me.lekov.parsekt.api/-find-response/copy.html","searchKeys":["copy","fun copy(results: List<T>? = null, count: Int? = null): FindResponse<T>"]},{"name":"fun copy(op: String, requestId: Int, object: T, clientId: String): LiveQueryResponse<T>","description":"me.lekov.parsekt.api.LiveQueryResponse.copy","location":"parse/me.lekov.parsekt.api/-live-query-response/copy.html","searchKeys":["copy","fun copy(op: String, requestId: Int, object: T, clientId: String): LiveQueryResponse<T>"]},{"name":"fun copy(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime? = null): LoginSignUpResponse","description":"me.lekov.parsekt.api.LoginSignUpResponse.copy","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/copy.html","searchKeys":["copy","fun copy(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime? = null): LoginSignUpResponse"]},{"name":"fun copy(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>? = emptyMap(), body: T? = null, mapper: (String) -> U, serializers: SerializersModule? = null, httpClient: HttpClient = HttpClient(CIO) {\n            install(WebSockets)\n            install(HttpCache)\n            install(JsonFeature) {\n                serializer =\n                    KotlinxSerializer(json = Json(from = Json.Default) {\n                        encodeDefaults = false\n                        ignoreUnknownKeys = true\n                        serializersModule = SerializersModule {\n                            contextual(String.serializer())\n                            contextual(Int.serializer())\n                            contextual(Long.serializer())\n                            contextual(Double.serializer())\n                            contextual(Boolean.serializer())\n                            contextual(ParseUser.serializer())\n                            serializers?.let { include(it) }\n                        }\n                    })\n            }\n        }): ParseApi.Command<T, U>","description":"me.lekov.parsekt.api.ParseApi.Command.copy","location":"parse/me.lekov.parsekt.api/-parse-api/-command/copy.html","searchKeys":["copy","fun copy(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>? = emptyMap(), body: T? = null, mapper: (String) -> U, serializers: SerializersModule? = null, httpClient: HttpClient = HttpClient(CIO) {\n            install(WebSockets)\n            install(HttpCache)\n            install(JsonFeature) {\n                serializer =\n                    KotlinxSerializer(json = Json(from = Json.Default) {\n                        encodeDefaults = false\n                        ignoreUnknownKeys = true\n                        serializersModule = SerializersModule {\n                            contextual(String.serializer())\n                            contextual(Int.serializer())\n                            contextual(Long.serializer())\n                            contextual(Double.serializer())\n                            contextual(Boolean.serializer())\n                            contextual(ParseUser.serializer())\n                            serializers?.let { include(it) }\n                        }\n                    })\n            }\n        }): ParseApi.Command<T, U>"]},{"name":"fun copy(code: Int, error: String? = null): ParseError","description":"me.lekov.parsekt.types.ParseError.copy","location":"parse/me.lekov.parsekt.types/-parse-error/copy.html","searchKeys":["copy","fun copy(code: Int, error: String? = null): ParseError"]},{"name":"fun copy(__type: String = \"GeoPoint\", latitude: Double, longitude: Double): ParseGeoPoint","description":"me.lekov.parsekt.types.ParseGeoPoint.copy","location":"parse/me.lekov.parsekt.types/-parse-geo-point/copy.html","searchKeys":["copy","fun copy(__type: String = \"GeoPoint\", latitude: Double, longitude: Double): ParseGeoPoint"]},{"name":"fun copy(__type: String = \"Pointer\", className: String? = null, objectId: String? = null, object: JsonObject? = null): ParsePointer","description":"me.lekov.parsekt.types.ParsePointer.copy","location":"parse/me.lekov.parsekt.types/-parse-pointer/copy.html","searchKeys":["copy","fun copy(__type: String = \"Pointer\", className: String? = null, objectId: String? = null, object: JsonObject? = null): ParsePointer"]},{"name":"fun copy(__type: String = \"Relation\", className: String? = null, key: String? = null, object: ParseObject<*>? = null): ParseRelation","description":"me.lekov.parsekt.types.ParseRelation.copy","location":"parse/me.lekov.parsekt.types/-parse-relation/copy.html","searchKeys":["copy","fun copy(__type: String = \"Relation\", className: String? = null, key: String? = null, object: ParseObject<*>? = null): ParseRelation"]},{"name":"fun copy(currentUser: T?, sessionToken: String?): ParseUser.Companion.CurrentUserContainer<T>","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.copy","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/copy.html","searchKeys":["copy","fun copy(currentUser: T?, sessionToken: String?): ParseUser.Companion.CurrentUserContainer<T>"]},{"name":"fun copy(key: String, value: JsonElement, comparator: String): QueryConstraint","description":"me.lekov.parsekt.types.QueryConstraint.copy","location":"parse/me.lekov.parsekt.types/-query-constraint/copy.html","searchKeys":["copy","fun copy(key: String, value: JsonElement, comparator: String): QueryConstraint"]},{"name":"val count: Int? = null","description":"me.lekov.parsekt.api.FindResponse.count","location":"parse/me.lekov.parsekt.api/-find-response/count.html","searchKeys":["count","val count: Int? = null"]},{"name":"var count: Int = 0","description":"me.lekov.parsekt.types.ParseQuery.Builder.count","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/count.html","searchKeys":["count","var count: Int = 0"]},{"name":"inline suspend fun <T : ParseObject<T>> count(options: Options = emptySet()): Int","description":"me.lekov.parsekt.types.ParseQuery.count","location":"parse/me.lekov.parsekt.types/-parse-query/count.html","searchKeys":["count","inline suspend fun <T : ParseObject<T>> count(options: Options = emptySet()): Int"]},{"name":"val results: List<T>? = null","description":"me.lekov.parsekt.api.FindResponse.results","location":"parse/me.lekov.parsekt.api/-find-response/results.html","searchKeys":["results","val results: List<T>? = null"]},{"name":"interface IApplicable","description":"me.lekov.parsekt.api.IApplicable","location":"parse/me.lekov.parsekt.api/-i-applicable/index.html","searchKeys":["IApplicable","interface IApplicable"]},{"name":"abstract fun <T : ParseObject<T>> apply(toItem: T): T","description":"me.lekov.parsekt.api.IApplicable.apply","location":"parse/me.lekov.parsekt.api/-i-applicable/apply.html","searchKeys":["apply","abstract fun <T : ParseObject<T>> apply(toItem: T): T"]},{"name":"open override fun <T : ParseObject<T>> apply(toItem: T): T","description":"me.lekov.parsekt.api.LoginSignUpResponse.apply","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/apply.html","searchKeys":["apply","open override fun <T : ParseObject<T>> apply(toItem: T): T"]},{"name":"data class LiveQueryResponse<T : ParseObject<T>>(op: String, requestId: Int, object: T, clientId: String)","description":"me.lekov.parsekt.api.LiveQueryResponse","location":"parse/me.lekov.parsekt.api/-live-query-response/index.html","searchKeys":["LiveQueryResponse","data class LiveQueryResponse<T : ParseObject<T>>(op: String, requestId: Int, object: T, clientId: String)"]},{"name":"fun <T : ParseObject<T>> LiveQueryResponse(op: String, requestId: Int, object: T, clientId: String)","description":"me.lekov.parsekt.api.LiveQueryResponse.LiveQueryResponse","location":"parse/me.lekov.parsekt.api/-live-query-response/-live-query-response.html","searchKeys":["LiveQueryResponse","fun <T : ParseObject<T>> LiveQueryResponse(op: String, requestId: Int, object: T, clientId: String)"]},{"name":"val clientId: String","description":"me.lekov.parsekt.api.LiveQueryResponse.clientId","location":"parse/me.lekov.parsekt.api/-live-query-response/client-id.html","searchKeys":["clientId","val clientId: String"]},{"name":"operator fun component3(): T","description":"me.lekov.parsekt.api.LiveQueryResponse.component3","location":"parse/me.lekov.parsekt.api/-live-query-response/component3.html","searchKeys":["component3","operator fun component3(): T"]},{"name":"operator fun component3(): LocalDateTime","description":"me.lekov.parsekt.api.LoginSignUpResponse.component3","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/component3.html","searchKeys":["component3","operator fun component3(): LocalDateTime"]},{"name":"operator fun component3(): Map<String, String>?","description":"me.lekov.parsekt.api.ParseApi.Command.component3","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component3.html","searchKeys":["component3","operator fun component3(): Map<String, String>?"]},{"name":"operator fun component3(): Double","description":"me.lekov.parsekt.types.ParseGeoPoint.component3","location":"parse/me.lekov.parsekt.types/-parse-geo-point/component3.html","searchKeys":["component3","operator fun component3(): Double"]},{"name":"operator fun component3(): String?","description":"me.lekov.parsekt.types.ParseRelation.component3","location":"parse/me.lekov.parsekt.types/-parse-relation/component3.html","searchKeys":["component3","operator fun component3(): String?"]},{"name":"operator fun component3(): String","description":"me.lekov.parsekt.types.QueryConstraint.component3","location":"parse/me.lekov.parsekt.types/-query-constraint/component3.html","searchKeys":["component3","operator fun component3(): String"]},{"name":"operator fun component4(): String","description":"me.lekov.parsekt.api.LiveQueryResponse.component4","location":"parse/me.lekov.parsekt.api/-live-query-response/component4.html","searchKeys":["component4","operator fun component4(): String"]},{"name":"operator fun component4(): LocalDateTime?","description":"me.lekov.parsekt.api.LoginSignUpResponse.component4","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/component4.html","searchKeys":["component4","operator fun component4(): LocalDateTime?"]},{"name":"operator fun component4(): T?","description":"me.lekov.parsekt.api.ParseApi.Command.component4","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component4.html","searchKeys":["component4","operator fun component4(): T?"]},{"name":"operator fun component4(): ParseObject<*>?","description":"me.lekov.parsekt.types.ParseRelation.component4","location":"parse/me.lekov.parsekt.types/-parse-relation/component4.html","searchKeys":["component4","operator fun component4(): ParseObject<*>?"]},{"name":"val object: T","description":"me.lekov.parsekt.api.LiveQueryResponse.object","location":"parse/me.lekov.parsekt.api/-live-query-response/object.html","searchKeys":["object","val object: T"]},{"name":"var object: ParseObject<*>? = null","description":"me.lekov.parsekt.types.ParseRelation.object","location":"parse/me.lekov.parsekt.types/-parse-relation/object.html","searchKeys":["object","var object: ParseObject<*>? = null"]},{"name":"val op: String","description":"me.lekov.parsekt.api.LiveQueryResponse.op","location":"parse/me.lekov.parsekt.api/-live-query-response/op.html","searchKeys":["op","val op: String"]},{"name":"val requestId: Int","description":"me.lekov.parsekt.api.LiveQueryResponse.requestId","location":"parse/me.lekov.parsekt.api/-live-query-response/request-id.html","searchKeys":["requestId","val requestId: Int"]},{"name":"object LocalDateTimeQuerySerializer : KSerializer<LocalDateTime> ","description":"me.lekov.parsekt.api.LocalDateTimeQuerySerializer","location":"parse/me.lekov.parsekt.api/-local-date-time-query-serializer/index.html","searchKeys":["LocalDateTimeQuerySerializer","object LocalDateTimeQuerySerializer : KSerializer<LocalDateTime> "]},{"name":"object LocalDateTimeSerializer : KSerializer<LocalDateTime> ","description":"me.lekov.parsekt.api.LocalDateTimeSerializer","location":"parse/me.lekov.parsekt.api/-local-date-time-serializer/index.html","searchKeys":["LocalDateTimeSerializer","object LocalDateTimeSerializer : KSerializer<LocalDateTime> "]},{"name":"data class LoginSignUpResponse(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime?) : IApplicable","description":"me.lekov.parsekt.api.LoginSignUpResponse","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/index.html","searchKeys":["LoginSignUpResponse","data class LoginSignUpResponse(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime?) : IApplicable"]},{"name":"fun LoginSignUpResponse(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime? = null)","description":"me.lekov.parsekt.api.LoginSignUpResponse.LoginSignUpResponse","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/-login-sign-up-response.html","searchKeys":["LoginSignUpResponse","fun LoginSignUpResponse(objectId: String, sessionToken: String, createdAt: LocalDateTime, updatedAt: LocalDateTime? = null)"]},{"name":"val createdAt: LocalDateTime","description":"me.lekov.parsekt.api.LoginSignUpResponse.createdAt","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime"]},{"name":"var createdAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseClass.createdAt","location":"parse/me.lekov.parsekt.types/-parse-class/created-at.html","searchKeys":["createdAt","var createdAt: LocalDateTime?"]},{"name":"var createdAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseInstallation.createdAt","location":"parse/me.lekov.parsekt.types/-parse-installation/created-at.html","searchKeys":["createdAt","var createdAt: LocalDateTime?"]},{"name":"var createdAt: LocalDateTime? = null","description":"me.lekov.parsekt.types.ParseObject.createdAt","location":"parse/me.lekov.parsekt.types/-parse-object/created-at.html","searchKeys":["createdAt","var createdAt: LocalDateTime? = null"]},{"name":"var createdAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseUser.createdAt","location":"parse/me.lekov.parsekt.types/-parse-user/created-at.html","searchKeys":["createdAt","var createdAt: LocalDateTime?"]},{"name":"val objectId: String","description":"me.lekov.parsekt.api.LoginSignUpResponse.objectId","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/object-id.html","searchKeys":["objectId","val objectId: String"]},{"name":"val objectId: String","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Object.objectId","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-object/object-id.html","searchKeys":["objectId","val objectId: String"]},{"name":"var objectId: String?","description":"me.lekov.parsekt.types.ParseClass.objectId","location":"parse/me.lekov.parsekt.types/-parse-class/object-id.html","searchKeys":["objectId","var objectId: String?"]},{"name":"var objectId: String?","description":"me.lekov.parsekt.types.ParseInstallation.objectId","location":"parse/me.lekov.parsekt.types/-parse-installation/object-id.html","searchKeys":["objectId","var objectId: String?"]},{"name":"var objectId: String? = null","description":"me.lekov.parsekt.types.ParseObject.objectId","location":"parse/me.lekov.parsekt.types/-parse-object/object-id.html","searchKeys":["objectId","var objectId: String? = null"]},{"name":"var objectId: String?","description":"me.lekov.parsekt.types.ParseUser.objectId","location":"parse/me.lekov.parsekt.types/-parse-user/object-id.html","searchKeys":["objectId","var objectId: String?"]},{"name":"val sessionToken: String","description":"me.lekov.parsekt.api.LoginSignUpResponse.sessionToken","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/session-token.html","searchKeys":["sessionToken","val sessionToken: String"]},{"name":"var sessionToken: String?","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.sessionToken","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/session-token.html","searchKeys":["sessionToken","var sessionToken: String?"]},{"name":"val sessionToken: String?","description":"me.lekov.parsekt.types.ParseUser.Companion.sessionToken","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/session-token.html","searchKeys":["sessionToken","val sessionToken: String?"]},{"name":"val updatedAt: LocalDateTime? = null","description":"me.lekov.parsekt.api.LoginSignUpResponse.updatedAt","location":"parse/me.lekov.parsekt.api/-login-sign-up-response/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime? = null"]},{"name":"var updatedAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseClass.updatedAt","location":"parse/me.lekov.parsekt.types/-parse-class/updated-at.html","searchKeys":["updatedAt","var updatedAt: LocalDateTime?"]},{"name":"var updatedAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseInstallation.updatedAt","location":"parse/me.lekov.parsekt.types/-parse-installation/updated-at.html","searchKeys":["updatedAt","var updatedAt: LocalDateTime?"]},{"name":"var updatedAt: LocalDateTime? = null","description":"me.lekov.parsekt.types.ParseObject.updatedAt","location":"parse/me.lekov.parsekt.types/-parse-object/updated-at.html","searchKeys":["updatedAt","var updatedAt: LocalDateTime? = null"]},{"name":"var updatedAt: LocalDateTime?","description":"me.lekov.parsekt.types.ParseUser.updatedAt","location":"parse/me.lekov.parsekt.types/-parse-user/updated-at.html","searchKeys":["updatedAt","var updatedAt: LocalDateTime?"]},{"name":"class ParseApi","description":"me.lekov.parsekt.api.ParseApi","location":"parse/me.lekov.parsekt.api/-parse-api/index.html","searchKeys":["ParseApi","class ParseApi"]},{"name":"fun ParseApi()","description":"me.lekov.parsekt.api.ParseApi.ParseApi","location":"parse/me.lekov.parsekt.api/-parse-api/-parse-api.html","searchKeys":["ParseApi","fun ParseApi()"]},{"name":"data class Command<T, U>(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>?, body: T?, mapper: (String) -> U, serializers: SerializersModule?, httpClient: HttpClient)","description":"me.lekov.parsekt.api.ParseApi.Command","location":"parse/me.lekov.parsekt.api/-parse-api/-command/index.html","searchKeys":["Command","data class Command<T, U>(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>?, body: T?, mapper: (String) -> U, serializers: SerializersModule?, httpClient: HttpClient)"]},{"name":"fun <T, U> Command(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>? = emptyMap(), body: T? = null, mapper: (String) -> U, serializers: SerializersModule? = null, httpClient: HttpClient = HttpClient(CIO) {\n            install(WebSockets)\n            install(HttpCache)\n            install(JsonFeature) {\n                serializer =\n                    KotlinxSerializer(json = Json(from = Json.Default) {\n                        encodeDefaults = false\n                        ignoreUnknownKeys = true\n                        serializersModule = SerializersModule {\n                            contextual(String.serializer())\n                            contextual(Int.serializer())\n                            contextual(Long.serializer())\n                            contextual(Double.serializer())\n                            contextual(Boolean.serializer())\n                            contextual(ParseUser.serializer())\n                            serializers?.let { include(it) }\n                        }\n                    })\n            }\n        })","description":"me.lekov.parsekt.api.ParseApi.Command.Command","location":"parse/me.lekov.parsekt.api/-parse-api/-command/-command.html","searchKeys":["Command","fun <T, U> Command(method: HttpMethod, path: ParseApi.Endpoint, params: Map<String, String>? = emptyMap(), body: T? = null, mapper: (String) -> U, serializers: SerializersModule? = null, httpClient: HttpClient = HttpClient(CIO) {\n            install(WebSockets)\n            install(HttpCache)\n            install(JsonFeature) {\n                serializer =\n                    KotlinxSerializer(json = Json(from = Json.Default) {\n                        encodeDefaults = false\n                        ignoreUnknownKeys = true\n                        serializersModule = SerializersModule {\n                            contextual(String.serializer())\n                            contextual(Int.serializer())\n                            contextual(Long.serializer())\n                            contextual(Double.serializer())\n                            contextual(Boolean.serializer())\n                            contextual(ParseUser.serializer())\n                            serializers?.let { include(it) }\n                        }\n                    })\n            }\n        })"]},{"name":"val body: T? = null","description":"me.lekov.parsekt.api.ParseApi.Command.body","location":"parse/me.lekov.parsekt.api/-parse-api/-command/body.html","searchKeys":["body","val body: T? = null"]},{"name":"operator fun component5(): (String) -> U","description":"me.lekov.parsekt.api.ParseApi.Command.component5","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component5.html","searchKeys":["component5","operator fun component5(): (String) -> U"]},{"name":"operator fun component6(): SerializersModule?","description":"me.lekov.parsekt.api.ParseApi.Command.component6","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component6.html","searchKeys":["component6","operator fun component6(): SerializersModule?"]},{"name":"operator fun component7(): HttpClient","description":"me.lekov.parsekt.api.ParseApi.Command.component7","location":"parse/me.lekov.parsekt.api/-parse-api/-command/component7.html","searchKeys":["component7","operator fun component7(): HttpClient"]},{"name":"inline suspend fun execute(options: Options = emptySet()): U","description":"me.lekov.parsekt.api.ParseApi.Command.execute","location":"parse/me.lekov.parsekt.api/-parse-api/-command/execute.html","searchKeys":["execute","inline suspend fun execute(options: Options = emptySet()): U"]},{"name":"var httpClient: HttpClient","description":"me.lekov.parsekt.api.ParseApi.Command.httpClient","location":"parse/me.lekov.parsekt.api/-parse-api/-command/http-client.html","searchKeys":["httpClient","var httpClient: HttpClient"]},{"name":"var mapper: (String) -> U","description":"me.lekov.parsekt.api.ParseApi.Command.mapper","location":"parse/me.lekov.parsekt.api/-parse-api/-command/mapper.html","searchKeys":["mapper","var mapper: (String) -> U"]},{"name":"val method: HttpMethod","description":"me.lekov.parsekt.api.ParseApi.Command.method","location":"parse/me.lekov.parsekt.api/-parse-api/-command/method.html","searchKeys":["method","val method: HttpMethod"]},{"name":"val params: Map<String, String>?","description":"me.lekov.parsekt.api.ParseApi.Command.params","location":"parse/me.lekov.parsekt.api/-parse-api/-command/params.html","searchKeys":["params","val params: Map<String, String>?"]},{"name":"val path: ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Command.path","location":"parse/me.lekov.parsekt.api/-parse-api/-command/path.html","searchKeys":["path","val path: ParseApi.Endpoint"]},{"name":"val path: String","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Other.path","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-other/path.html","searchKeys":["path","val path: String"]},{"name":"val serializers: SerializersModule? = null","description":"me.lekov.parsekt.api.ParseApi.Command.serializers","location":"parse/me.lekov.parsekt.api/-parse-api/-command/serializers.html","searchKeys":["serializers","val serializers: SerializersModule? = null"]},{"name":"object Companion","description":"me.lekov.parsekt.api.ParseApi.Companion","location":"parse/me.lekov.parsekt.api/-parse-api/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.store.ParseStore.Companion","location":"parse/me.lekov.parsekt.store/-parse-store/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.store.SecureStore.Companion","location":"parse/me.lekov.parsekt.store/-secure-store/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.types.ACL.Companion","location":"parse/me.lekov.parsekt.types/-a-c-l/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.types.ParseError.Companion","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.types.ParseGeoPoint.Companion","location":"parse/me.lekov.parsekt.types/-parse-geo-point/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"me.lekov.parsekt.types.ParseInstallation.Companion","location":"parse/me.lekov.parsekt.types/-parse-installation/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion : ParseClassCompanion","description":"me.lekov.parsekt.types.ParseObject.Companion","location":"parse/me.lekov.parsekt.types/-parse-object/-companion/index.html","searchKeys":["Companion","object Companion : ParseClassCompanion"]},{"name":"object Companion : ParseClassCompanion","description":"me.lekov.parsekt.types.ParseUser.Companion","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/index.html","searchKeys":["Companion","object Companion : ParseClassCompanion"]},{"name":"sealed class Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/index.html","searchKeys":["Endpoint","sealed class Endpoint"]},{"name":"object Batch : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Batch","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-batch/index.html","searchKeys":["Batch","object Batch : ParseApi.Endpoint"]},{"name":"object Login : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Login","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-login/index.html","searchKeys":["Login","object Login : ParseApi.Endpoint"]},{"name":"object Logout : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Logout","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-logout/index.html","searchKeys":["Logout","object Logout : ParseApi.Endpoint"]},{"name":"class Object(className: String, objectId: String) : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Object","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-object/index.html","searchKeys":["Object","class Object(className: String, objectId: String) : ParseApi.Endpoint"]},{"name":"fun Object(className: String, objectId: String)","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Object.Object","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-object/-object.html","searchKeys":["Object","fun Object(className: String, objectId: String)"]},{"name":"val className: String","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Object.className","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-object/class-name.html","searchKeys":["className","val className: String"]},{"name":"val className: String","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Objects.className","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-objects/class-name.html","searchKeys":["className","val className: String"]},{"name":"val className: String","description":"me.lekov.parsekt.types.ParseClass.className","location":"parse/me.lekov.parsekt.types/-parse-class/class-name.html","searchKeys":["className","val className: String"]},{"name":"val className: String","description":"me.lekov.parsekt.types.ParseInstallation.className","location":"parse/me.lekov.parsekt.types/-parse-installation/class-name.html","searchKeys":["className","val className: String"]},{"name":"val className: String","description":"me.lekov.parsekt.types.ParseObject.className","location":"parse/me.lekov.parsekt.types/-parse-object/class-name.html","searchKeys":["className","val className: String"]},{"name":"var className: String? = null","description":"me.lekov.parsekt.types.ParseRelation.className","location":"parse/me.lekov.parsekt.types/-parse-relation/class-name.html","searchKeys":["className","var className: String? = null"]},{"name":"val className: String","description":"me.lekov.parsekt.types.ParseUser.className","location":"parse/me.lekov.parsekt.types/-parse-user/class-name.html","searchKeys":["className","val className: String"]},{"name":"class Objects(className: String) : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Objects","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-objects/index.html","searchKeys":["Objects","class Objects(className: String) : ParseApi.Endpoint"]},{"name":"fun Objects(className: String)","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Objects.Objects","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-objects/-objects.html","searchKeys":["Objects","fun Objects(className: String)"]},{"name":"class Other(path: String) : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Other","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-other/index.html","searchKeys":["Other","class Other(path: String) : ParseApi.Endpoint"]},{"name":"fun Other(path: String)","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Other.Other","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-other/-other.html","searchKeys":["Other","fun Other(path: String)"]},{"name":"object Signup : ParseApi.Endpoint","description":"me.lekov.parsekt.api.ParseApi.Endpoint.Signup","location":"parse/me.lekov.parsekt.api/-parse-api/-endpoint/-signup/index.html","searchKeys":["Signup","object Signup : ParseApi.Endpoint"]},{"name":"sealed class Option","description":"me.lekov.parsekt.api.ParseApi.Option","location":"parse/me.lekov.parsekt.api/-parse-api/-option/index.html","searchKeys":["Option","sealed class Option"]},{"name":"class InstallationId(installation: String) : ParseApi.Option","description":"me.lekov.parsekt.api.ParseApi.Option.InstallationId","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-installation-id/index.html","searchKeys":["InstallationId","class InstallationId(installation: String) : ParseApi.Option"]},{"name":"fun InstallationId(installation: String)","description":"me.lekov.parsekt.api.ParseApi.Option.InstallationId.InstallationId","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-installation-id/-installation-id.html","searchKeys":["InstallationId","fun InstallationId(installation: String)"]},{"name":"val installation: String","description":"me.lekov.parsekt.api.ParseApi.Option.InstallationId.installation","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-installation-id/installation.html","searchKeys":["installation","val installation: String"]},{"name":"class SessionToken(token: String) : ParseApi.Option","description":"me.lekov.parsekt.api.ParseApi.Option.SessionToken","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-session-token/index.html","searchKeys":["SessionToken","class SessionToken(token: String) : ParseApi.Option"]},{"name":"fun SessionToken(token: String)","description":"me.lekov.parsekt.api.ParseApi.Option.SessionToken.SessionToken","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-session-token/-session-token.html","searchKeys":["SessionToken","fun SessionToken(token: String)"]},{"name":"val token: String","description":"me.lekov.parsekt.api.ParseApi.Option.SessionToken.token","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-session-token/token.html","searchKeys":["token","val token: String"]},{"name":"object UseMasterKey : ParseApi.Option","description":"me.lekov.parsekt.api.ParseApi.Option.UseMasterKey","location":"parse/me.lekov.parsekt.api/-parse-api/-option/-use-master-key/index.html","searchKeys":["UseMasterKey","object UseMasterKey : ParseApi.Option"]},{"name":"object ParsePointerSerializer : KSerializer<ParsePointer> ","description":"me.lekov.parsekt.api.ParsePointerSerializer","location":"parse/me.lekov.parsekt.api/-parse-pointer-serializer/index.html","searchKeys":["ParsePointerSerializer","object ParsePointerSerializer : KSerializer<ParsePointer> "]},{"name":"object QueryConstraintsSerializer : KSerializer<MutableList<QueryConstraint>> ","description":"me.lekov.parsekt.api.QueryConstraintsSerializer","location":"parse/me.lekov.parsekt.api/-query-constraints-serializer/index.html","searchKeys":["QueryConstraintsSerializer","object QueryConstraintsSerializer : KSerializer<MutableList<QueryConstraint>> "]},{"name":"open class SingletonHolder<out T : Any, in A>(creator: (A) -> T)","description":"me.lekov.parsekt.api.SingletonHolder","location":"parse/me.lekov.parsekt.api/-singleton-holder/index.html","searchKeys":["SingletonHolder","open class SingletonHolder<out T : Any, in A>(creator: (A) -> T)"]},{"name":"fun <out T : Any, in A> SingletonHolder(creator: (A) -> T)","description":"me.lekov.parsekt.api.SingletonHolder.SingletonHolder","location":"parse/me.lekov.parsekt.api/-singleton-holder/-singleton-holder.html","searchKeys":["SingletonHolder","fun <out T : Any, in A> SingletonHolder(creator: (A) -> T)"]},{"name":"var creator: (A) -> T?","description":"me.lekov.parsekt.api.SingletonHolder.creator","location":"parse/me.lekov.parsekt.api/-singleton-holder/creator.html","searchKeys":["creator","var creator: (A) -> T?"]},{"name":"fun getInstance(arg: A): T","description":"me.lekov.parsekt.api.SingletonHolder.getInstance","location":"parse/me.lekov.parsekt.api/-singleton-holder/get-instance.html","searchKeys":["getInstance","fun getInstance(arg: A): T"]},{"name":"var instance: T? = null","description":"me.lekov.parsekt.api.SingletonHolder.instance","location":"parse/me.lekov.parsekt.api/-singleton-holder/instance.html","searchKeys":["instance","var instance: T? = null"]},{"name":"inline suspend fun <T : ParseObject<T>> ParseObject<T>.delete(options: Options = emptySet())","description":"me.lekov.parsekt.api.delete","location":"parse/me.lekov.parsekt.api/delete.html","searchKeys":["delete","inline suspend fun <T : ParseObject<T>> ParseObject<T>.delete(options: Options = emptySet())"]},{"name":"fun delete(key: String)","description":"me.lekov.parsekt.store.SecureStore.delete","location":"parse/me.lekov.parsekt.store/-secure-store/delete.html","searchKeys":["delete","fun delete(key: String)"]},{"name":"fun delete(key: String)","description":"me.lekov.parsekt.types.ParseObject.delete","location":"parse/me.lekov.parsekt.types/-parse-object/delete.html","searchKeys":["delete","fun delete(key: String)"]},{"name":"inline suspend fun <T : ParseObject<T>> ParseObject<T>.fetch(options: Options = emptySet()): ParseObject<T>","description":"me.lekov.parsekt.api.fetch","location":"parse/me.lekov.parsekt.api/fetch.html","searchKeys":["fetch","inline suspend fun <T : ParseObject<T>> ParseObject<T>.fetch(options: Options = emptySet()): ParseObject<T>"]},{"name":"inline suspend fun <T : ParseObject<T>> fetch(): T?","description":"me.lekov.parsekt.types.ParsePointer.fetch","location":"parse/me.lekov.parsekt.types/-parse-pointer/fetch.html","searchKeys":["fetch","inline suspend fun <T : ParseObject<T>> fetch(): T?"]},{"name":"inline fun <T : ParseObject<T>> ParseObject<T>.relation(key: String): ParseQuery.Builder","description":"me.lekov.parsekt.api.relation","location":"parse/me.lekov.parsekt.api/relation.html","searchKeys":["relation","inline fun <T : ParseObject<T>> ParseObject<T>.relation(key: String): ParseQuery.Builder"]},{"name":"inline suspend fun <T : ParseObject<T>> ParseObject<T>.save(options: Options = emptySet()): ParseObject<T>","description":"me.lekov.parsekt.api.save","location":"parse/me.lekov.parsekt.api/save.html","searchKeys":["save","inline suspend fun <T : ParseObject<T>> ParseObject<T>.save(options: Options = emptySet()): ParseObject<T>"]},{"name":"class ParseStore","description":"me.lekov.parsekt.store.ParseStore","location":"parse/me.lekov.parsekt.store/-parse-store/index.html","searchKeys":["ParseStore","class ParseStore"]},{"name":"fun ParseStore()","description":"me.lekov.parsekt.store.ParseStore.ParseStore","location":"parse/me.lekov.parsekt.store/-parse-store/-parse-store.html","searchKeys":["ParseStore","fun ParseStore()"]},{"name":"class SecureStore","description":"me.lekov.parsekt.store.SecureStore","location":"parse/me.lekov.parsekt.store/-secure-store/index.html","searchKeys":["SecureStore","class SecureStore"]},{"name":"fun SecureStore()","description":"me.lekov.parsekt.store.SecureStore.SecureStore","location":"parse/me.lekov.parsekt.store/-secure-store/-secure-store.html","searchKeys":["SecureStore","fun SecureStore()"]},{"name":"fun getInt(key: String): Int","description":"me.lekov.parsekt.store.SecureStore.getInt","location":"parse/me.lekov.parsekt.store/-secure-store/get-int.html","searchKeys":["getInt","fun getInt(key: String): Int"]},{"name":"inline fun <T> getObject(key: String): T?","description":"me.lekov.parsekt.store.SecureStore.getObject","location":"parse/me.lekov.parsekt.store/-secure-store/get-object.html","searchKeys":["getObject","inline fun <T> getObject(key: String): T?"]},{"name":"fun getString(key: String): String?","description":"me.lekov.parsekt.store.SecureStore.getString","location":"parse/me.lekov.parsekt.store/-secure-store/get-string.html","searchKeys":["getString","fun getString(key: String): String?"]},{"name":"inline fun <T> setObject(key: String, value: T)","description":"me.lekov.parsekt.store.SecureStore.setObject","location":"parse/me.lekov.parsekt.store/-secure-store/set-object.html","searchKeys":["setObject","inline fun <T> setObject(key: String, value: T)"]},{"name":"val sharedPreferences: SharedPreferences","description":"me.lekov.parsekt.store.SecureStore.sharedPreferences","location":"parse/me.lekov.parsekt.store/-secure-store/shared-preferences.html","searchKeys":["sharedPreferences","val sharedPreferences: SharedPreferences"]},{"name":"class ACL(acl: MutableMap<String, MutableMap<String, Boolean>>?)","description":"me.lekov.parsekt.types.ACL","location":"parse/me.lekov.parsekt.types/-a-c-l/index.html","searchKeys":["ACL","class ACL(acl: MutableMap<String, MutableMap<String, Boolean>>?)"]},{"name":"fun ACL(acl: MutableMap<String, MutableMap<String, Boolean>>? = null)","description":"me.lekov.parsekt.types.ACL.ACL","location":"parse/me.lekov.parsekt.types/-a-c-l/-a-c-l.html","searchKeys":["ACL","fun ACL(acl: MutableMap<String, MutableMap<String, Boolean>>? = null)"]},{"name":"var ACL: ACL?","description":"me.lekov.parsekt.types.ParseClass.ACL","location":"parse/me.lekov.parsekt.types/-parse-class/-a-c-l.html","searchKeys":["ACL","var ACL: ACL?"]},{"name":"var ACL: ACL?","description":"me.lekov.parsekt.types.ParseInstallation.ACL","location":"parse/me.lekov.parsekt.types/-parse-installation/-a-c-l.html","searchKeys":["ACL","var ACL: ACL?"]},{"name":"var ACL: ACL? = null","description":"me.lekov.parsekt.types.ParseObject.ACL","location":"parse/me.lekov.parsekt.types/-parse-object/-a-c-l.html","searchKeys":["ACL","var ACL: ACL? = null"]},{"name":"var ACL: ACL?","description":"me.lekov.parsekt.types.ParseUser.ACL","location":"parse/me.lekov.parsekt.types/-parse-user/-a-c-l.html","searchKeys":["ACL","var ACL: ACL?"]},{"name":"const val publicScope: String","description":"me.lekov.parsekt.types.ACL.Companion.publicScope","location":"parse/me.lekov.parsekt.types/-a-c-l/-companion/public-scope.html","searchKeys":["publicScope","const val publicScope: String"]},{"name":"fun get(key: String, access: Access): Boolean","description":"me.lekov.parsekt.types.ACL.get","location":"parse/me.lekov.parsekt.types/-a-c-l/get.html","searchKeys":["get","fun get(key: String, access: Access): Boolean"]},{"name":"inline fun <T : ParseObject<T>> get(): T?","description":"me.lekov.parsekt.types.ParsePointer.get","location":"parse/me.lekov.parsekt.types/-parse-pointer/get.html","searchKeys":["get","inline fun <T : ParseObject<T>> get(): T?"]},{"name":"inline suspend fun <T : ParseObject<T>> get(id: String, options: Options = emptySet()): T?","description":"me.lekov.parsekt.types.ParseQuery.get","location":"parse/me.lekov.parsekt.types/-parse-query/get.html","searchKeys":["get","inline suspend fun <T : ParseObject<T>> get(id: String, options: Options = emptySet()): T?"]},{"name":"var publicRead: Boolean","description":"me.lekov.parsekt.types.ACL.publicRead","location":"parse/me.lekov.parsekt.types/-a-c-l/public-read.html","searchKeys":["publicRead","var publicRead: Boolean"]},{"name":"var publicWrite: Boolean","description":"me.lekov.parsekt.types.ACL.publicWrite","location":"parse/me.lekov.parsekt.types/-a-c-l/public-write.html","searchKeys":["publicWrite","var publicWrite: Boolean"]},{"name":"fun set(key: String, access: Access, value: Boolean)","description":"me.lekov.parsekt.types.ACL.set","location":"parse/me.lekov.parsekt.types/-a-c-l/set.html","searchKeys":["set","fun set(key: String, access: Access, value: Boolean)"]},{"name":"fun setReadAccess(userId: String, value: Boolean)","description":"me.lekov.parsekt.types.ACL.setReadAccess","location":"parse/me.lekov.parsekt.types/-a-c-l/set-read-access.html","searchKeys":["setReadAccess","fun setReadAccess(userId: String, value: Boolean)"]},{"name":"fun setWriteAccess(userId: String, value: Boolean)","description":"me.lekov.parsekt.types.ACL.setWriteAccess","location":"parse/me.lekov.parsekt.types/-a-c-l/set-write-access.html","searchKeys":["setWriteAccess","fun setWriteAccess(userId: String, value: Boolean)"]},{"name":"enum Access : Enum<Access> ","description":"me.lekov.parsekt.types.Access","location":"parse/me.lekov.parsekt.types/-access/index.html","searchKeys":["Access","enum Access : Enum<Access> "]},{"name":"val name: String","description":"me.lekov.parsekt.types.Access.name","location":"parse/me.lekov.parsekt.types/-access/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"me.lekov.parsekt.types.Access.read.name","location":"parse/me.lekov.parsekt.types/-access/read/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"me.lekov.parsekt.types.Access.write.name","location":"parse/me.lekov.parsekt.types/-access/write/name.html","searchKeys":["name","val name: String"]},{"name":"fun name(): String","description":"me.lekov.parsekt.types.Role.name","location":"parse/me.lekov.parsekt.types/-role/name.html","searchKeys":["name","fun name(): String"]},{"name":"val ordinal: Int","description":"me.lekov.parsekt.types.Access.ordinal","location":"parse/me.lekov.parsekt.types/-access/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"me.lekov.parsekt.types.Access.read.ordinal","location":"parse/me.lekov.parsekt.types/-access/read/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"me.lekov.parsekt.types.Access.write.ordinal","location":"parse/me.lekov.parsekt.types/-access/write/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"read()","description":"me.lekov.parsekt.types.Access.read","location":"parse/me.lekov.parsekt.types/-access/read/index.html","searchKeys":["read","read()"]},{"name":"write()","description":"me.lekov.parsekt.types.Access.write","location":"parse/me.lekov.parsekt.types/-access/write/index.html","searchKeys":["write","write()"]},{"name":"open class ParseClass : ParseObject<ParseClass> ","description":"me.lekov.parsekt.types.ParseClass","location":"parse/me.lekov.parsekt.types/-parse-class/index.html","searchKeys":["ParseClass","open class ParseClass : ParseObject<ParseClass> "]},{"name":"fun ParseClass()","description":"me.lekov.parsekt.types.ParseClass.ParseClass","location":"parse/me.lekov.parsekt.types/-parse-class/-parse-class.html","searchKeys":["ParseClass","fun ParseClass()"]},{"name":"open class ParseClassCompanion","description":"me.lekov.parsekt.types.ParseClassCompanion","location":"parse/me.lekov.parsekt.types/-parse-class-companion/index.html","searchKeys":["ParseClassCompanion","open class ParseClassCompanion"]},{"name":"fun ParseClassCompanion()","description":"me.lekov.parsekt.types.ParseClassCompanion.ParseClassCompanion","location":"parse/me.lekov.parsekt.types/-parse-class-companion/-parse-class-companion.html","searchKeys":["ParseClassCompanion","fun ParseClassCompanion()"]},{"name":"val json: Json","description":"me.lekov.parsekt.types.ParseClassCompanion.json","location":"parse/me.lekov.parsekt.types/-parse-class-companion/json.html","searchKeys":["json","val json: Json"]},{"name":"val json: Json","description":"me.lekov.parsekt.types.ParseObject.Companion.json","location":"parse/me.lekov.parsekt.types/-parse-object/-companion/json.html","searchKeys":["json","val json: Json"]},{"name":"val json: Json","description":"me.lekov.parsekt.types.ParseUser.Companion.json","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/json.html","searchKeys":["json","val json: Json"]},{"name":"fun query(builder: ParseQuery.Builder.() -> Unit): ParseQuery","description":"me.lekov.parsekt.types.ParseClassCompanion.query","location":"parse/me.lekov.parsekt.types/-parse-class-companion/query.html","searchKeys":["query","fun query(builder: ParseQuery.Builder.() -> Unit): ParseQuery"]},{"name":"fun query(): ParseQuery.Builder","description":"me.lekov.parsekt.types.ParseRelation.query","location":"parse/me.lekov.parsekt.types/-parse-relation/query.html","searchKeys":["query","fun query(): ParseQuery.Builder"]},{"name":"data class ParseError(code: Int, error: String?) : Error","description":"me.lekov.parsekt.types.ParseError","location":"parse/me.lekov.parsekt.types/-parse-error/index.html","searchKeys":["ParseError","data class ParseError(code: Int, error: String?) : Error"]},{"name":"fun ParseError(code: Int, error: String? = null)","description":"me.lekov.parsekt.types.ParseError.ParseError","location":"parse/me.lekov.parsekt.types/-parse-error/-parse-error.html","searchKeys":["ParseError","fun ParseError(code: Int, error: String? = null)"]},{"name":"const val ACCOUNT_ALREADY_LINKED: Int = 208","description":"me.lekov.parsekt.types.ParseError.Companion.ACCOUNT_ALREADY_LINKED","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-a-c-c-o-u-n-t_-a-l-r-e-a-d-y_-l-i-n-k-e-d.html","searchKeys":["ACCOUNT_ALREADY_LINKED","const val ACCOUNT_ALREADY_LINKED: Int = 208"]},{"name":"const val CACHE_MISS: Int = 120","description":"me.lekov.parsekt.types.ParseError.Companion.CACHE_MISS","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-c-a-c-h-e_-m-i-s-s.html","searchKeys":["CACHE_MISS","const val CACHE_MISS: Int = 120"]},{"name":"const val COMMAND_UNAVAILABLE: Int = 108","description":"me.lekov.parsekt.types.ParseError.Companion.COMMAND_UNAVAILABLE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-c-o-m-m-a-n-d_-u-n-a-v-a-i-l-a-b-l-e.html","searchKeys":["COMMAND_UNAVAILABLE","const val COMMAND_UNAVAILABLE: Int = 108"]},{"name":"const val CONNECTION_FAILED: Int = 100","description":"me.lekov.parsekt.types.ParseError.Companion.CONNECTION_FAILED","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-c-o-n-n-e-c-t-i-o-n_-f-a-i-l-e-d.html","searchKeys":["CONNECTION_FAILED","const val CONNECTION_FAILED: Int = 100"]},{"name":"const val DUPLICATE_VALUE: Int = 137","description":"me.lekov.parsekt.types.ParseError.Companion.DUPLICATE_VALUE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-d-u-p-l-i-c-a-t-e_-v-a-l-u-e.html","searchKeys":["DUPLICATE_VALUE","const val DUPLICATE_VALUE: Int = 137"]},{"name":"const val EMAIL_MISSING: Int = 204","description":"me.lekov.parsekt.types.ParseError.Companion.EMAIL_MISSING","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-e-m-a-i-l_-m-i-s-s-i-n-g.html","searchKeys":["EMAIL_MISSING","const val EMAIL_MISSING: Int = 204"]},{"name":"const val EMAIL_NOT_FOUND: Int = 205","description":"me.lekov.parsekt.types.ParseError.Companion.EMAIL_NOT_FOUND","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-e-m-a-i-l_-n-o-t_-f-o-u-n-d.html","searchKeys":["EMAIL_NOT_FOUND","const val EMAIL_NOT_FOUND: Int = 205"]},{"name":"const val EMAIL_TAKEN: Int = 203","description":"me.lekov.parsekt.types.ParseError.Companion.EMAIL_TAKEN","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-e-m-a-i-l_-t-a-k-e-n.html","searchKeys":["EMAIL_TAKEN","const val EMAIL_TAKEN: Int = 203"]},{"name":"const val EXCEEDED_QUOTA: Int = 140","description":"me.lekov.parsekt.types.ParseError.Companion.EXCEEDED_QUOTA","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-e-x-c-e-e-d-e-d_-q-u-o-t-a.html","searchKeys":["EXCEEDED_QUOTA","const val EXCEEDED_QUOTA: Int = 140"]},{"name":"const val FILE_DELETE_ERROR: Int = 153","description":"me.lekov.parsekt.types.ParseError.Companion.FILE_DELETE_ERROR","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-f-i-l-e_-d-e-l-e-t-e_-e-r-r-o-r.html","searchKeys":["FILE_DELETE_ERROR","const val FILE_DELETE_ERROR: Int = 153"]},{"name":"const val INCORRECT_TYPE: Int = 111","description":"me.lekov.parsekt.types.ParseError.Companion.INCORRECT_TYPE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-c-o-r-r-e-c-t_-t-y-p-e.html","searchKeys":["INCORRECT_TYPE","const val INCORRECT_TYPE: Int = 111"]},{"name":"const val INVALID_ACL: Int = 123","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_ACL","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-a-c-l.html","searchKeys":["INVALID_ACL","const val INVALID_ACL: Int = 123"]},{"name":"const val INVALID_CHANNEL_NAME: Int = 112","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_CHANNEL_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-c-h-a-n-n-e-l_-n-a-m-e.html","searchKeys":["INVALID_CHANNEL_NAME","const val INVALID_CHANNEL_NAME: Int = 112"]},{"name":"const val INVALID_CLASS_NAME: Int = 103","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_CLASS_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-c-l-a-s-s_-n-a-m-e.html","searchKeys":["INVALID_CLASS_NAME","const val INVALID_CLASS_NAME: Int = 103"]},{"name":"const val INVALID_EMAIL_ADDRESS: Int = 125","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_EMAIL_ADDRESS","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-e-m-a-i-l_-a-d-d-r-e-s-s.html","searchKeys":["INVALID_EMAIL_ADDRESS","const val INVALID_EMAIL_ADDRESS: Int = 125"]},{"name":"const val INVALID_EVENT_NAME: Int = 160","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_EVENT_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-e-v-e-n-t_-n-a-m-e.html","searchKeys":["INVALID_EVENT_NAME","const val INVALID_EVENT_NAME: Int = 160"]},{"name":"const val INVALID_FILE_NAME: Int = 122","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_FILE_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-f-i-l-e_-n-a-m-e.html","searchKeys":["INVALID_FILE_NAME","const val INVALID_FILE_NAME: Int = 122"]},{"name":"const val INVALID_JSON: Int = 107","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_JSON","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-j-s-o-n.html","searchKeys":["INVALID_JSON","const val INVALID_JSON: Int = 107"]},{"name":"const val INVALID_KEY_NAME: Int = 105","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_KEY_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-k-e-y_-n-a-m-e.html","searchKeys":["INVALID_KEY_NAME","const val INVALID_KEY_NAME: Int = 105"]},{"name":"const val INVALID_LINKED_SESSION: Int = 251","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_LINKED_SESSION","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-l-i-n-k-e-d_-s-e-s-s-i-o-n.html","searchKeys":["INVALID_LINKED_SESSION","const val INVALID_LINKED_SESSION: Int = 251"]},{"name":"const val INVALID_NESTED_KEY: Int = 121","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_NESTED_KEY","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-n-e-s-t-e-d_-k-e-y.html","searchKeys":["INVALID_NESTED_KEY","const val INVALID_NESTED_KEY: Int = 121"]},{"name":"const val INVALID_POINTER: Int = 106","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_POINTER","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-p-o-i-n-t-e-r.html","searchKeys":["INVALID_POINTER","const val INVALID_POINTER: Int = 106"]},{"name":"const val INVALID_QUERY: Int = 102","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_QUERY","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-q-u-e-r-y.html","searchKeys":["INVALID_QUERY","const val INVALID_QUERY: Int = 102"]},{"name":"const val INVALID_ROLE_NAME: Int = 139","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_ROLE_NAME","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-r-o-l-e_-n-a-m-e.html","searchKeys":["INVALID_ROLE_NAME","const val INVALID_ROLE_NAME: Int = 139"]},{"name":"const val INVALID_SESSION_TOKEN: Int = 209","description":"me.lekov.parsekt.types.ParseError.Companion.INVALID_SESSION_TOKEN","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-i-n-v-a-l-i-d_-s-e-s-s-i-o-n_-t-o-k-e-n.html","searchKeys":["INVALID_SESSION_TOKEN","const val INVALID_SESSION_TOKEN: Int = 209"]},{"name":"const val LINKED_ID_MISSING: Int = 250","description":"me.lekov.parsekt.types.ParseError.Companion.LINKED_ID_MISSING","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-l-i-n-k-e-d_-i-d_-m-i-s-s-i-n-g.html","searchKeys":["LINKED_ID_MISSING","const val LINKED_ID_MISSING: Int = 250"]},{"name":"const val MISSING_OBJECT_ID: Int = 104","description":"me.lekov.parsekt.types.ParseError.Companion.MISSING_OBJECT_ID","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-m-i-s-s-i-n-g_-o-b-j-e-c-t_-i-d.html","searchKeys":["MISSING_OBJECT_ID","const val MISSING_OBJECT_ID: Int = 104"]},{"name":"const val MISSING_REQUIRED_FIELD_ERROR: Int = 135","description":"me.lekov.parsekt.types.ParseError.Companion.MISSING_REQUIRED_FIELD_ERROR","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-m-i-s-s-i-n-g_-r-e-q-u-i-r-e-d_-f-i-e-l-d_-e-r-r-o-r.html","searchKeys":["MISSING_REQUIRED_FIELD_ERROR","const val MISSING_REQUIRED_FIELD_ERROR: Int = 135"]},{"name":"const val MUST_CREATE_USER_THROUGH_SIGNUP: Int = 207","description":"me.lekov.parsekt.types.ParseError.Companion.MUST_CREATE_USER_THROUGH_SIGNUP","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-m-u-s-t_-c-r-e-a-t-e_-u-s-e-r_-t-h-r-o-u-g-h_-s-i-g-n-u-p.html","searchKeys":["MUST_CREATE_USER_THROUGH_SIGNUP","const val MUST_CREATE_USER_THROUGH_SIGNUP: Int = 207"]},{"name":"const val NOT_INITIALIZED: Int = 109","description":"me.lekov.parsekt.types.ParseError.Companion.NOT_INITIALIZED","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-n-o-t_-i-n-i-t-i-a-l-i-z-e-d.html","searchKeys":["NOT_INITIALIZED","const val NOT_INITIALIZED: Int = 109"]},{"name":"const val OBJECT_NOT_FOUND: Int = 101","description":"me.lekov.parsekt.types.ParseError.Companion.OBJECT_NOT_FOUND","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-o-b-j-e-c-t_-n-o-t_-f-o-u-n-d.html","searchKeys":["OBJECT_NOT_FOUND","const val OBJECT_NOT_FOUND: Int = 101"]},{"name":"const val OBJECT_TOO_LARGE: Int = 116","description":"me.lekov.parsekt.types.ParseError.Companion.OBJECT_TOO_LARGE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-o-b-j-e-c-t_-t-o-o_-l-a-r-g-e.html","searchKeys":["OBJECT_TOO_LARGE","const val OBJECT_TOO_LARGE: Int = 116"]},{"name":"const val OPERATION_FORBIDDEN: Int = 119","description":"me.lekov.parsekt.types.ParseError.Companion.OPERATION_FORBIDDEN","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-o-p-e-r-a-t-i-o-n_-f-o-r-b-i-d-d-e-n.html","searchKeys":["OPERATION_FORBIDDEN","const val OPERATION_FORBIDDEN: Int = 119"]},{"name":"const val OTHER_CAUSE: Int","description":"me.lekov.parsekt.types.ParseError.Companion.OTHER_CAUSE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-o-t-h-e-r_-c-a-u-s-e.html","searchKeys":["OTHER_CAUSE","const val OTHER_CAUSE: Int"]},{"name":"const val PASSWORD_MISSING: Int = 201","description":"me.lekov.parsekt.types.ParseError.Companion.PASSWORD_MISSING","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-p-a-s-s-w-o-r-d_-m-i-s-s-i-n-g.html","searchKeys":["PASSWORD_MISSING","const val PASSWORD_MISSING: Int = 201"]},{"name":"const val PUSH_MISCONFIGURED: Int = 115","description":"me.lekov.parsekt.types.ParseError.Companion.PUSH_MISCONFIGURED","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-p-u-s-h_-m-i-s-c-o-n-f-i-g-u-r-e-d.html","searchKeys":["PUSH_MISCONFIGURED","const val PUSH_MISCONFIGURED: Int = 115"]},{"name":"const val REQUEST_LIMIT_EXCEEDED: Int = 155","description":"me.lekov.parsekt.types.ParseError.Companion.REQUEST_LIMIT_EXCEEDED","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-r-e-q-u-e-s-t_-l-i-m-i-t_-e-x-c-e-e-d-e-d.html","searchKeys":["REQUEST_LIMIT_EXCEEDED","const val REQUEST_LIMIT_EXCEEDED: Int = 155"]},{"name":"const val SCRIPT_ERROR: Int = 141","description":"me.lekov.parsekt.types.ParseError.Companion.SCRIPT_ERROR","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-s-c-r-i-p-t_-e-r-r-o-r.html","searchKeys":["SCRIPT_ERROR","const val SCRIPT_ERROR: Int = 141"]},{"name":"const val SESSION_MISSING: Int = 206","description":"me.lekov.parsekt.types.ParseError.Companion.SESSION_MISSING","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-s-e-s-s-i-o-n_-m-i-s-s-i-n-g.html","searchKeys":["SESSION_MISSING","const val SESSION_MISSING: Int = 206"]},{"name":"const val TIMEOUT: Int = 124","description":"me.lekov.parsekt.types.ParseError.Companion.TIMEOUT","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-t-i-m-e-o-u-t.html","searchKeys":["TIMEOUT","const val TIMEOUT: Int = 124"]},{"name":"const val UNSUPPORTED_SERVICE: Int = 252","description":"me.lekov.parsekt.types.ParseError.Companion.UNSUPPORTED_SERVICE","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-u-n-s-u-p-p-o-r-t-e-d_-s-e-r-v-i-c-e.html","searchKeys":["UNSUPPORTED_SERVICE","const val UNSUPPORTED_SERVICE: Int = 252"]},{"name":"const val USERNAME_MISSING: Int = 200","description":"me.lekov.parsekt.types.ParseError.Companion.USERNAME_MISSING","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-u-s-e-r-n-a-m-e_-m-i-s-s-i-n-g.html","searchKeys":["USERNAME_MISSING","const val USERNAME_MISSING: Int = 200"]},{"name":"const val USERNAME_TAKEN: Int = 202","description":"me.lekov.parsekt.types.ParseError.Companion.USERNAME_TAKEN","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-u-s-e-r-n-a-m-e_-t-a-k-e-n.html","searchKeys":["USERNAME_TAKEN","const val USERNAME_TAKEN: Int = 202"]},{"name":"const val VALIDATION_ERROR: Int = 142","description":"me.lekov.parsekt.types.ParseError.Companion.VALIDATION_ERROR","location":"parse/me.lekov.parsekt.types/-parse-error/-companion/-v-a-l-i-d-a-t-i-o-n_-e-r-r-o-r.html","searchKeys":["VALIDATION_ERROR","const val VALIDATION_ERROR: Int = 142"]},{"name":"open val cause: Throwable?","description":"me.lekov.parsekt.types.ParseError.cause","location":"parse/me.lekov.parsekt.types/-parse-error/cause.html","searchKeys":["cause","open val cause: Throwable?"]},{"name":"val code: Int","description":"me.lekov.parsekt.types.ParseError.code","location":"parse/me.lekov.parsekt.types/-parse-error/code.html","searchKeys":["code","val code: Int"]},{"name":"val error: String? = null","description":"me.lekov.parsekt.types.ParseError.error","location":"parse/me.lekov.parsekt.types/-parse-error/error.html","searchKeys":["error","val error: String? = null"]},{"name":"open val message: String?","description":"me.lekov.parsekt.types.ParseError.message","location":"parse/me.lekov.parsekt.types/-parse-error/message.html","searchKeys":["message","open val message: String?"]},{"name":"data class ParseGeoPoint(__type: String, latitude: Double, longitude: Double)","description":"me.lekov.parsekt.types.ParseGeoPoint","location":"parse/me.lekov.parsekt.types/-parse-geo-point/index.html","searchKeys":["ParseGeoPoint","data class ParseGeoPoint(__type: String, latitude: Double, longitude: Double)"]},{"name":"fun ParseGeoPoint(__type: String = \"GeoPoint\", latitude: Double, longitude: Double)","description":"me.lekov.parsekt.types.ParseGeoPoint.ParseGeoPoint","location":"parse/me.lekov.parsekt.types/-parse-geo-point/-parse-geo-point.html","searchKeys":["ParseGeoPoint","fun ParseGeoPoint(__type: String = \"GeoPoint\", latitude: Double, longitude: Double)"]},{"name":"const val earthRadiusKilometers: Double = 6371.0","description":"me.lekov.parsekt.types.ParseGeoPoint.Companion.earthRadiusKilometers","location":"parse/me.lekov.parsekt.types/-parse-geo-point/-companion/earth-radius-kilometers.html","searchKeys":["earthRadiusKilometers","const val earthRadiusKilometers: Double = 6371.0"]},{"name":"const val earthRadiusMiles: Double = 3958.8","description":"me.lekov.parsekt.types.ParseGeoPoint.Companion.earthRadiusMiles","location":"parse/me.lekov.parsekt.types/-parse-geo-point/-companion/earth-radius-miles.html","searchKeys":["earthRadiusMiles","const val earthRadiusMiles: Double = 3958.8"]},{"name":"val latitude: Double","description":"me.lekov.parsekt.types.ParseGeoPoint.latitude","location":"parse/me.lekov.parsekt.types/-parse-geo-point/latitude.html","searchKeys":["latitude","val latitude: Double"]},{"name":"val longitude: Double","description":"me.lekov.parsekt.types.ParseGeoPoint.longitude","location":"parse/me.lekov.parsekt.types/-parse-geo-point/longitude.html","searchKeys":["longitude","val longitude: Double"]},{"name":"class ParseInstallation : ParseObject<ParseInstallation> ","description":"me.lekov.parsekt.types.ParseInstallation","location":"parse/me.lekov.parsekt.types/-parse-installation/index.html","searchKeys":["ParseInstallation","class ParseInstallation : ParseObject<ParseInstallation> "]},{"name":"fun ParseInstallation()","description":"me.lekov.parsekt.types.ParseInstallation.ParseInstallation","location":"parse/me.lekov.parsekt.types/-parse-installation/-parse-installation.html","searchKeys":["ParseInstallation","fun ParseInstallation()"]},{"name":"val current: ParseInstallation","description":"me.lekov.parsekt.types.ParseInstallation.Companion.current","location":"parse/me.lekov.parsekt.types/-parse-installation/-companion/current.html","searchKeys":["current","val current: ParseInstallation"]},{"name":"var appIdentifier: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.appIdentifier","location":"parse/me.lekov.parsekt.types/-parse-installation/app-identifier.html","searchKeys":["appIdentifier","var appIdentifier: String? = null"]},{"name":"var appName: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.appName","location":"parse/me.lekov.parsekt.types/-parse-installation/app-name.html","searchKeys":["appName","var appName: String? = null"]},{"name":"var appVersion: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.appVersion","location":"parse/me.lekov.parsekt.types/-parse-installation/app-version.html","searchKeys":["appVersion","var appVersion: String? = null"]},{"name":"var badge: Int? = 0","description":"me.lekov.parsekt.types.ParseInstallation.badge","location":"parse/me.lekov.parsekt.types/-parse-installation/badge.html","searchKeys":["badge","var badge: Int? = 0"]},{"name":"var channels: List<String>","description":"me.lekov.parsekt.types.ParseInstallation.channels","location":"parse/me.lekov.parsekt.types/-parse-installation/channels.html","searchKeys":["channels","var channels: List<String>"]},{"name":"var deviceToken: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.deviceToken","location":"parse/me.lekov.parsekt.types/-parse-installation/device-token.html","searchKeys":["deviceToken","var deviceToken: String? = null"]},{"name":"var deviceType: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.deviceType","location":"parse/me.lekov.parsekt.types/-parse-installation/device-type.html","searchKeys":["deviceType","var deviceType: String? = null"]},{"name":"var installationId: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.installationId","location":"parse/me.lekov.parsekt.types/-parse-installation/installation-id.html","searchKeys":["installationId","var installationId: String? = null"]},{"name":"var localeIdentifier: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.localeIdentifier","location":"parse/me.lekov.parsekt.types/-parse-installation/locale-identifier.html","searchKeys":["localeIdentifier","var localeIdentifier: String? = null"]},{"name":"var parseVersion: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.parseVersion","location":"parse/me.lekov.parsekt.types/-parse-installation/parse-version.html","searchKeys":["parseVersion","var parseVersion: String? = null"]},{"name":"var timeZone: String? = null","description":"me.lekov.parsekt.types.ParseInstallation.timeZone","location":"parse/me.lekov.parsekt.types/-parse-installation/time-zone.html","searchKeys":["timeZone","var timeZone: String? = null"]},{"name":"open class ParseObject<T>","description":"me.lekov.parsekt.types.ParseObject","location":"parse/me.lekov.parsekt.types/-parse-object/index.html","searchKeys":["ParseObject","open class ParseObject<T>"]},{"name":"fun ParseObject()","description":"me.lekov.parsekt.types.ParseObject.ParseObject","location":"parse/me.lekov.parsekt.types/-parse-object/-parse-object.html","searchKeys":["ParseObject","fun ParseObject()"]},{"name":"fun decrement(key: String, amount: Int)","description":"me.lekov.parsekt.types.ParseObject.decrement","location":"parse/me.lekov.parsekt.types/-parse-object/decrement.html","searchKeys":["decrement","fun decrement(key: String, amount: Int)"]},{"name":"inline fun <T : ParseObject<T>> hasSameObjectId(other: T): Boolean","description":"me.lekov.parsekt.types.ParseObject.hasSameObjectId","location":"parse/me.lekov.parsekt.types/-parse-object/has-same-object-id.html","searchKeys":["hasSameObjectId","inline fun <T : ParseObject<T>> hasSameObjectId(other: T): Boolean"]},{"name":"fun increment(key: String, amount: Int)","description":"me.lekov.parsekt.types.ParseObject.increment","location":"parse/me.lekov.parsekt.types/-parse-object/increment.html","searchKeys":["increment","fun increment(key: String, amount: Int)"]},{"name":"open override fun toString(): String","description":"me.lekov.parsekt.types.ParseObject.toString","location":"parse/me.lekov.parsekt.types/-parse-object/to-string.html","searchKeys":["toString","open override fun toString(): String"]},{"name":"open override fun toString(): String","description":"me.lekov.parsekt.types.ParseUser.toString","location":"parse/me.lekov.parsekt.types/-parse-user/to-string.html","searchKeys":["toString","open override fun toString(): String"]},{"name":"data class ParsePointer(__type: String, className: String?, objectId: String?, object: JsonObject?)","description":"me.lekov.parsekt.types.ParsePointer","location":"parse/me.lekov.parsekt.types/-parse-pointer/index.html","searchKeys":["ParsePointer","data class ParsePointer(__type: String, className: String?, objectId: String?, object: JsonObject?)"]},{"name":"fun ParsePointer(__type: String = \"Pointer\", className: String? = null, objectId: String? = null, object: JsonObject? = null)","description":"me.lekov.parsekt.types.ParsePointer.ParsePointer","location":"parse/me.lekov.parsekt.types/-parse-pointer/-parse-pointer.html","searchKeys":["ParsePointer","fun ParsePointer(__type: String = \"Pointer\", className: String? = null, objectId: String? = null, object: JsonObject? = null)"]},{"name":"val available: Boolean","description":"me.lekov.parsekt.types.ParsePointer.available","location":"parse/me.lekov.parsekt.types/-parse-pointer/available.html","searchKeys":["available","val available: Boolean"]},{"name":"class ParseQuery","description":"me.lekov.parsekt.types.ParseQuery","location":"parse/me.lekov.parsekt.types/-parse-query/index.html","searchKeys":["ParseQuery","class ParseQuery"]},{"name":"class Builder","description":"me.lekov.parsekt.types.ParseQuery.Builder","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/index.html","searchKeys":["Builder","class Builder"]},{"name":"fun Builder()","description":"me.lekov.parsekt.types.ParseQuery.Builder.Builder","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/-builder.html","searchKeys":["Builder","fun Builder()"]},{"name":"fun clear(key: String? = null)","description":"me.lekov.parsekt.types.ParseQuery.Builder.clear","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/clear.html","searchKeys":["clear","fun clear(key: String? = null)"]},{"name":"fun containedIt(key: String, values: List<String>)","description":"me.lekov.parsekt.types.ParseQuery.Builder.containedIt","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/contained-it.html","searchKeys":["containedIt","fun containedIt(key: String, values: List<String>)"]},{"name":"fun contains(key: String, substring: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.contains","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/contains.html","searchKeys":["contains","fun contains(key: String, substring: String)"]},{"name":"fun containsAll(key: String, values: List<String>)","description":"me.lekov.parsekt.types.ParseQuery.Builder.containsAll","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/contains-all.html","searchKeys":["containsAll","fun containsAll(key: String, values: List<String>)"]},{"name":"fun doesNotMatchesKeyInQuery(key: String, queryKey: String, query: ParseQuery)","description":"me.lekov.parsekt.types.ParseQuery.Builder.doesNotMatchesKeyInQuery","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/does-not-matches-key-in-query.html","searchKeys":["doesNotMatchesKeyInQuery","fun doesNotMatchesKeyInQuery(key: String, queryKey: String, query: ParseQuery)"]},{"name":"fun equalsTo(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.equalsTo","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/equals-to.html","searchKeys":["equalsTo","fun equalsTo(key: String, value: Any)"]},{"name":"fun exclude(vararg include: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.exclude","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/exclude.html","searchKeys":["exclude","fun exclude(vararg include: String)"]},{"name":"fun exists(key: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.exists","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/exists.html","searchKeys":["exists","fun exists(key: String)"]},{"name":"fun fullText(key: String, value: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.fullText","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/full-text.html","searchKeys":["fullText","fun fullText(key: String, value: String)"]},{"name":"fun greaterThan(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.greaterThan","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/greater-than.html","searchKeys":["greaterThan","fun greaterThan(key: String, value: Any)"]},{"name":"fun greaterThanOrEqualTo(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.greaterThanOrEqualTo","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/greater-than-or-equal-to.html","searchKeys":["greaterThanOrEqualTo","fun greaterThanOrEqualTo(key: String, value: Any)"]},{"name":"fun hasPrefix(key: String, prefix: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.hasPrefix","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/has-prefix.html","searchKeys":["hasPrefix","fun hasPrefix(key: String, prefix: String)"]},{"name":"fun hasSuffix(key: String, suffix: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.hasSuffix","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/has-suffix.html","searchKeys":["hasSuffix","fun hasSuffix(key: String, suffix: String)"]},{"name":"fun include(vararg include: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.include","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/include.html","searchKeys":["include","fun include(vararg include: String)"]},{"name":"fun includeAll()","description":"me.lekov.parsekt.types.ParseQuery.Builder.includeAll","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/include-all.html","searchKeys":["includeAll","fun includeAll()"]},{"name":"fun lessThan(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.lessThan","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/less-than.html","searchKeys":["lessThan","fun lessThan(key: String, value: Any)"]},{"name":"fun lessThanOrEqualTo(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.lessThanOrEqualTo","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/less-than-or-equal-to.html","searchKeys":["lessThanOrEqualTo","fun lessThanOrEqualTo(key: String, value: Any)"]},{"name":"var limit: Int = 100","description":"me.lekov.parsekt.types.ParseQuery.Builder.limit","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/limit.html","searchKeys":["limit","var limit: Int = 100"]},{"name":"fun match(key: String, regex: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.match","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/match.html","searchKeys":["match","fun match(key: String, regex: String)"]},{"name":"fun matchesKeyInQuery(key: String, queryKey: String, query: ParseQuery)","description":"me.lekov.parsekt.types.ParseQuery.Builder.matchesKeyInQuery","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/matches-key-in-query.html","searchKeys":["matchesKeyInQuery","fun matchesKeyInQuery(key: String, queryKey: String, query: ParseQuery)"]},{"name":"fun matchesQuery(key: String, query: ParseQuery)","description":"me.lekov.parsekt.types.ParseQuery.Builder.matchesQuery","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/matches-query.html","searchKeys":["matchesQuery","fun matchesQuery(key: String, query: ParseQuery)"]},{"name":"fun near(key: String, value: ParseGeoPoint)","description":"me.lekov.parsekt.types.ParseQuery.Builder.near","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/near.html","searchKeys":["near","fun near(key: String, value: ParseGeoPoint)"]},{"name":"fun notContainedIn(key: String, values: List<String>)","description":"me.lekov.parsekt.types.ParseQuery.Builder.notContainedIn","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/not-contained-in.html","searchKeys":["notContainedIn","fun notContainedIn(key: String, values: List<String>)"]},{"name":"fun notEqualsTo(key: String, value: Any)","description":"me.lekov.parsekt.types.ParseQuery.Builder.notEqualsTo","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/not-equals-to.html","searchKeys":["notEqualsTo","fun notEqualsTo(key: String, value: Any)"]},{"name":"fun notExists(key: String)","description":"me.lekov.parsekt.types.ParseQuery.Builder.notExists","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/not-exists.html","searchKeys":["notExists","fun notExists(key: String)"]},{"name":"fun notMatchesQuery(key: String, query: ParseQuery)","description":"me.lekov.parsekt.types.ParseQuery.Builder.notMatchesQuery","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/not-matches-query.html","searchKeys":["notMatchesQuery","fun notMatchesQuery(key: String, query: ParseQuery)"]},{"name":"fun polygonContains(key: String, point: ParseGeoPoint)","description":"me.lekov.parsekt.types.ParseQuery.Builder.polygonContains","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/polygon-contains.html","searchKeys":["polygonContains","fun polygonContains(key: String, point: ParseGeoPoint)"]},{"name":"fun related(key: String, parent: ParseObject<*>)","description":"me.lekov.parsekt.types.ParseQuery.Builder.related","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/related.html","searchKeys":["related","fun related(key: String, parent: ParseObject<*>)"]},{"name":"var skip: Int = 0","description":"me.lekov.parsekt.types.ParseQuery.Builder.skip","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/skip.html","searchKeys":["skip","var skip: Int = 0"]},{"name":"fun withinGeoBox(key: String, southWest: ParseGeoPoint, northEast: ParseGeoPoint)","description":"me.lekov.parsekt.types.ParseQuery.Builder.withinGeoBox","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/within-geo-box.html","searchKeys":["withinGeoBox","fun withinGeoBox(key: String, southWest: ParseGeoPoint, northEast: ParseGeoPoint)"]},{"name":"fun withinKilometers(key: String, value: ParseGeoPoint, km: Double)","description":"me.lekov.parsekt.types.ParseQuery.Builder.withinKilometers","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/within-kilometers.html","searchKeys":["withinKilometers","fun withinKilometers(key: String, value: ParseGeoPoint, km: Double)"]},{"name":"fun withinMiles(key: String, value: ParseGeoPoint, miles: Double)","description":"me.lekov.parsekt.types.ParseQuery.Builder.withinMiles","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/within-miles.html","searchKeys":["withinMiles","fun withinMiles(key: String, value: ParseGeoPoint, miles: Double)"]},{"name":"fun withinPolygon(key: String, polygon: List<ParseGeoPoint>)","description":"me.lekov.parsekt.types.ParseQuery.Builder.withinPolygon","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/within-polygon.html","searchKeys":["withinPolygon","fun withinPolygon(key: String, polygon: List<ParseGeoPoint>)"]},{"name":"fun withinRadians(key: String, value: ParseGeoPoint, radians: Double)","description":"me.lekov.parsekt.types.ParseQuery.Builder.withinRadians","location":"parse/me.lekov.parsekt.types/-parse-query/-builder/within-radians.html","searchKeys":["withinRadians","fun withinRadians(key: String, value: ParseGeoPoint, radians: Double)"]},{"name":"fun and(vararg value: ParseQuery): ParseQuery","description":"me.lekov.parsekt.types.ParseQuery.and","location":"parse/me.lekov.parsekt.types/-parse-query/and.html","searchKeys":["and","fun and(vararg value: ParseQuery): ParseQuery"]},{"name":"inline suspend fun <T : ParseObject<T>> find(options: Options = emptySet()): List<T>","description":"me.lekov.parsekt.types.ParseQuery.find","location":"parse/me.lekov.parsekt.types/-parse-query/find.html","searchKeys":["find","inline suspend fun <T : ParseObject<T>> find(options: Options = emptySet()): List<T>"]},{"name":"inline suspend fun <T : ParseObject<T>> first(options: Options = emptySet()): List<T>","description":"me.lekov.parsekt.types.ParseQuery.first","location":"parse/me.lekov.parsekt.types/-parse-query/first.html","searchKeys":["first","inline suspend fun <T : ParseObject<T>> first(options: Options = emptySet()): List<T>"]},{"name":"fun or(vararg value: ParseQuery): ParseQuery","description":"me.lekov.parsekt.types.ParseQuery.or","location":"parse/me.lekov.parsekt.types/-parse-query/or.html","searchKeys":["or","fun or(vararg value: ParseQuery): ParseQuery"]},{"name":"inline suspend fun <T : ParseObject<T>> subscribe(): Flow<List<T>>","description":"me.lekov.parsekt.types.ParseQuery.subscribe","location":"parse/me.lekov.parsekt.types/-parse-query/subscribe.html","searchKeys":["subscribe","inline suspend fun <T : ParseObject<T>> subscribe(): Flow<List<T>>"]},{"name":"data class ParseRelation(__type: String, className: String?, key: String?, object: ParseObject<*>?)","description":"me.lekov.parsekt.types.ParseRelation","location":"parse/me.lekov.parsekt.types/-parse-relation/index.html","searchKeys":["ParseRelation","data class ParseRelation(__type: String, className: String?, key: String?, object: ParseObject<*>?)"]},{"name":"fun ParseRelation(__type: String = \"Relation\", className: String? = null, key: String? = null, object: ParseObject<*>? = null)","description":"me.lekov.parsekt.types.ParseRelation.ParseRelation","location":"parse/me.lekov.parsekt.types/-parse-relation/-parse-relation.html","searchKeys":["ParseRelation","fun ParseRelation(__type: String = \"Relation\", className: String? = null, key: String? = null, object: ParseObject<*>? = null)"]},{"name":"fun <T : ParseObject<T>> add(element: T)","description":"me.lekov.parsekt.types.ParseRelation.add","location":"parse/me.lekov.parsekt.types/-parse-relation/add.html","searchKeys":["add","fun <T : ParseObject<T>> add(element: T)"]},{"name":"fun <T : ParseObject<T>> addAll(elements: List<T>)","description":"me.lekov.parsekt.types.ParseRelation.addAll","location":"parse/me.lekov.parsekt.types/-parse-relation/add-all.html","searchKeys":["addAll","fun <T : ParseObject<T>> addAll(elements: List<T>)"]},{"name":"var key: String? = null","description":"me.lekov.parsekt.types.ParseRelation.key","location":"parse/me.lekov.parsekt.types/-parse-relation/key.html","searchKeys":["key","var key: String? = null"]},{"name":"val key: String","description":"me.lekov.parsekt.types.QueryConstraint.key","location":"parse/me.lekov.parsekt.types/-query-constraint/key.html","searchKeys":["key","val key: String"]},{"name":"fun <T : ParseObject<T>> remove(element: T)","description":"me.lekov.parsekt.types.ParseRelation.remove","location":"parse/me.lekov.parsekt.types/-parse-relation/remove.html","searchKeys":["remove","fun <T : ParseObject<T>> remove(element: T)"]},{"name":"fun <T : ParseObject<T>> removeAll(elements: List<T>)","description":"me.lekov.parsekt.types.ParseRelation.removeAll","location":"parse/me.lekov.parsekt.types/-parse-relation/remove-all.html","searchKeys":["removeAll","fun <T : ParseObject<T>> removeAll(elements: List<T>)"]},{"name":"open class ParseUser : ParseObject<ParseUser> ","description":"me.lekov.parsekt.types.ParseUser","location":"parse/me.lekov.parsekt.types/-parse-user/index.html","searchKeys":["ParseUser","open class ParseUser : ParseObject<ParseUser> "]},{"name":"fun ParseUser()","description":"me.lekov.parsekt.types.ParseUser.ParseUser","location":"parse/me.lekov.parsekt.types/-parse-user/-parse-user.html","searchKeys":["ParseUser","fun ParseUser()"]},{"name":"data class CurrentUserContainer<T : ParseUser>(currentUser: T?, sessionToken: String?)","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/index.html","searchKeys":["CurrentUserContainer","data class CurrentUserContainer<T : ParseUser>(currentUser: T?, sessionToken: String?)"]},{"name":"fun <T : ParseUser> CurrentUserContainer(currentUser: T?, sessionToken: String?)","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.CurrentUserContainer","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/-current-user-container.html","searchKeys":["CurrentUserContainer","fun <T : ParseUser> CurrentUserContainer(currentUser: T?, sessionToken: String?)"]},{"name":"var currentUser: T?","description":"me.lekov.parsekt.types.ParseUser.Companion.CurrentUserContainer.currentUser","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/-current-user-container/current-user.html","searchKeys":["currentUser","var currentUser: T?"]},{"name":"inline fun <T : ParseUser> currentUser(): T?","description":"me.lekov.parsekt.types.ParseUser.Companion.currentUser","location":"parse/me.lekov.parsekt.types/-parse-user/-companion/current-user.html","searchKeys":["currentUser","inline fun <T : ParseUser> currentUser(): T?"]},{"name":"var email: String? = null","description":"me.lekov.parsekt.types.ParseUser.email","location":"parse/me.lekov.parsekt.types/-parse-user/email.html","searchKeys":["email","var email: String? = null"]},{"name":"suspend fun logout()","description":"me.lekov.parsekt.types.ParseUser.logout","location":"parse/me.lekov.parsekt.types/-parse-user/logout.html","searchKeys":["logout","suspend fun logout()"]},{"name":"var username: String? = null","description":"me.lekov.parsekt.types.ParseUser.username","location":"parse/me.lekov.parsekt.types/-parse-user/username.html","searchKeys":["username","var username: String? = null"]},{"name":"data class QueryConstraint(key: String, value: JsonElement, comparator: String)","description":"me.lekov.parsekt.types.QueryConstraint","location":"parse/me.lekov.parsekt.types/-query-constraint/index.html","searchKeys":["QueryConstraint","data class QueryConstraint(key: String, value: JsonElement, comparator: String)"]},{"name":"fun QueryConstraint(key: String, value: JsonElement, comparator: String)","description":"me.lekov.parsekt.types.QueryConstraint.QueryConstraint","location":"parse/me.lekov.parsekt.types/-query-constraint/-query-constraint.html","searchKeys":["QueryConstraint","fun QueryConstraint(key: String, value: JsonElement, comparator: String)"]},{"name":"val comparator: String","description":"me.lekov.parsekt.types.QueryConstraint.comparator","location":"parse/me.lekov.parsekt.types/-query-constraint/comparator.html","searchKeys":["comparator","val comparator: String"]},{"name":"val value: JsonElement","description":"me.lekov.parsekt.types.QueryConstraint.value","location":"parse/me.lekov.parsekt.types/-query-constraint/value.html","searchKeys":["value","val value: JsonElement"]},{"name":"class Role(roleName: String)","description":"me.lekov.parsekt.types.Role","location":"parse/me.lekov.parsekt.types/-role/index.html","searchKeys":["Role","class Role(roleName: String)"]},{"name":"fun Role(roleName: String)","description":"me.lekov.parsekt.types.Role.Role","location":"parse/me.lekov.parsekt.types/-role/-role.html","searchKeys":["Role","fun Role(roleName: String)"]},{"name":"inline suspend fun <T : ParseUser> T.login(username: String, password: String): T","description":"me.lekov.parsekt.types.login","location":"parse/me.lekov.parsekt.types/login.html","searchKeys":["login","inline suspend fun <T : ParseUser> T.login(username: String, password: String): T"]},{"name":"inline suspend fun <T : ParseUser> T.signup(username: String, password: String): T","description":"me.lekov.parsekt.types.signup","location":"parse/me.lekov.parsekt.types/signup.html","searchKeys":["signup","inline suspend fun <T : ParseUser> T.signup(username: String, password: String): T"]}]
